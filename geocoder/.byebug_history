c
с
c
a.any?
a = { a: 2}
a.any?
a = {}
error = { detail: message }
meta
message
c
error_message
error_messages
c
error_messages
c
result
result.success?
result
c
fail!(I18n.t('api.errors.not_found'))
result
c
result.code
c
result.code
result
resukt
c
result
c
result
c
result
c
result
c
data[city]
city
c
result
result[0]
c
result.success?
result
result.nil?
c
fail!(I18n.t('api.errors.not_found'))
result = data[city]
data = load_data!
c
сc
м
result.any?
city
data
result = data[city]
geocode(city)
data = load_data!
data = load_data
c
ApplicationLoader.data
ApplicationLoader.inspect
ApplicationLoader
geocode(1)
geocode
c
geocode(city)
c
city
geocode(city)
c
geocoder_params[:geocoder][:city]
result = Geocoder::FindCodeService.call(geocoder_params[:geocoder][:city])
geocoder_params = validate_with!(GeocoderParamsContract)
c
CSV.read(DATA_PATH, headers: true)
DATA_PATH = 'db/data/city.csv'
DATA_PATH = 'db/data/city.csv
c
result = Geocoder::FindCodeService.call(geocoder_params[:geocoder][:city])
geocoder_params = validate_with!(GeocoderParamsContract)
c
result = Geocoder::FindCodeService.call(geocoder_params[:geocoder][:city])
geocoder_params[:geocoder][:city]
geocoder_params = validate_with!(GeocoderParamsContract)
c
result = Geocoder::FindCodeService.call(geocoder: geocoder_params[:geocoder])
geocoder_params = validate_with!(GeocoderParamsContract)
c
result = Geocoder::FindCodeService.call(geocoder: geocoder_params[:geocoder])
result = Geocoder::FindCodeService.call(geocoder: geocoder_params)
geocoder_params[:geocoder]
result = Geocoder::FindCodeService.call(geocoder: geocoder_params[:geocoder])
geocoder_params
geocoder_params[:geocoder][:city]
geocoder_params.dig(:geocoder, :city)
geocoder_params
geocoder_params[:city]
geocoder_params
geocoder_params = validate_with!(GeocoderParamsContract)
params
c
geocoder_params = validate_with!(GeocoderParamsContract)
params = {geocoder: {city: 'Moscow'}}
geocoder_params = validate_with!(GeocoderParamsContract)
params
prarams
